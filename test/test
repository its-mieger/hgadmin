#! /usr/bin/env python

import shutil, os, sys, stat, testutils

PLAYGROUND="/tmp/hgadmin-testdirectory"

def createplayground():
    try:
        shutil.rmtree(PLAYGROUND)
        os.mkdir(PLAYGROUND)
    except Exception as e:
        print(e)

def cleanplayground():
    try:
        shutil.rmtree(PLAYGROUND)
    except Exception as e:
        print(e)

def runtest(testname, testdict):
    print("running test " + repr(testname))
    __import__(testname)
    sys.modules[testname].run(PLAYGROUND, testdict)

def listtests(testdir):
    l = os.listdir(testdir)
    return [ f.rstrip('.py') for f in l if f.startswith('test_') and f.endswith('.py') ]

def gentestdict(testdir):
    d = {}
    tds = os.path.dirname(testdir)
    d['hg-ssh'    ] = tds + '/' + 'hg-ssh'    
    d['hgadmin'   ] = tds + '/' + 'hgadmin'   
    d['mkconfrepo'] = tds + '/' + 'mkconfrepo'
    d['masterrepo'] = tds
    return d

def main():
    testdir = os.path.abspath(os.path.dirname(__file__))
    sys.path.append(testdir)
    tests = listtests(testdir)
    testdict = gentestdict(testdir)
    if len(sys.argv) == 1:
        for test in tests:
            createplayground()
            testutils.settestname(test)
            runtest(test, testdict)
            cleanplayground()
    elif len(sys.argv) == 2:
        if sys.argv[1] == '--listtests':
            print(tests)
        elif sys.argv[1] == '--cleanup':
            cleanplayground()
        else:
            createplayground()
            testutils.settestname(sys.argv[1])
            runtest(sys.argv[1], testdict)
    
if __name__ == "__main__":
    main()
